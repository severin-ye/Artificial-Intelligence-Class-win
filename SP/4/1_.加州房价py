# 确保Python版本 >= 3.5
import sys
# 如果Python版本低于3.5，则抛出异常
assert sys.version_info >= (3, 5)

# 确保Scikit-Learn版本 >= 0.20
import sklearn
# 如果Scikit-Learn版本低于0.20，则抛出异常
assert sklearn.__version__ >= "0.20"

# 常用导入库
import numpy as np
import os

# 绘制图形
# 在Jupyter Notebook中内联显示绘图
import matplotlib as mpl
import matplotlib.pyplot as plt
# 设置坐标轴标签字体大小
mpl.rc('axes', labelsize=14)
# 设置x轴刻度标签字体大小
mpl.rc('xtick', labelsize=12)
# 设置y轴刻度标签字体大小
mpl.rc('ytick', labelsize=12)

# 图形保存路径
PROJECT_ROOT_DIR = "."
# 当前项目的章节ID
CHAPTER_ID = "end_to_end_project"
# 图形保存的完整路径
IMAGES_PATH = os.path.join(PROJECT_ROOT_DIR, "images", CHAPTER_ID)
# 创建保存图形的目录，如果目录已存在则不会抛出异常
os.makedirs(IMAGES_PATH, exist_ok=True)

# 定义保存图形的函数
def save_fig(fig_id, tight_layout=True, fig_extension="png", resolution=300):
    # 图形保存路径和文件名
    path = os.path.join(IMAGES_PATH, fig_id + "." + fig_extension)
    print("Saving figure", fig_id)
    if tight_layout:
        # 自动调整子图参数，使得子图间的间距合适
        plt.tight_layout()
    # 保存图形到指定路径
    plt.savefig(path, format=fig_extension, dpi=resolution)


import os
import tarfile
import urllib.request

# 下载路径和数据集路径
DOWNLOAD_ROOT = "https://raw.githubusercontent.com/ageron/handson-ml2/master/"
# 数据集保存路径
HOUSING_PATH = os.path.join("datasets", "housing")
# 数据集的完整下载URL
HOUSING_URL = DOWNLOAD_ROOT + "datasets/housing/housing.tgz"

# 定义下载数据的函数
def fetch_housing_data(housing_url=HOUSING_URL, housing_path=HOUSING_PATH):
    # 如果数据目录不存在，则创建目录
    if not os.path.isdir(housing_path):
        os.makedirs(housing_path)
    # 数据集的压缩文件路径
    tgz_path = os.path.join(housing_path, "housing.tgz")
    # 下载数据集并保存为tgz文件
    urllib.request.urlretrieve(housing_url, tgz_path)
    # 打开下载的tgz文件
    housing_tgz = tarfile.open(tgz_path)
    # 解压tgz文件到指定目录
    housing_tgz.extractall(path=housing_path)
    # 关闭tgz文件
    housing_tgz.close()

# 下载数据
fetch_housing_data()

import pandas as pd

# 定义加载数据的函数
def load_housing_data(housing_path=HOUSING_PATH):
    # 数据集的CSV文件路径
    csv_path = os.path.join(housing_path, "housing.csv")
    # 读取CSV文件并返回一个DataFrame对象
    return pd.read_csv(csv_path)

# 加载数据
housing = load_housing_data()

# 加载数据
housing = load_housing_data()

# 表格--获取描述性统计信息--均值、标准差、最小值、最大值等
description = housing.describe()
print(description)

# 图标--为每个数值列创建直方图
housing.hist(bins=50, figsize=(20, 15))
plt.show()
